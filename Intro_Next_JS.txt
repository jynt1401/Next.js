Next_JS (react framework for production)


** yarn dev->_app.js(calls component)->index.js



-----------------------Routing Section Intro----------------------------


#----pages based routing-------#

File-system based routing mechanism

When a file is added to the pages folder in a project, it automatically becomes available as a route

By mixing and matching file names with a nested folder structure, it is possible to pretty much define the most common routingÂ patterns


------------(index.js will be the default page)--------------

if we wanna go to about page its route will be localhost:3000/about then for link server will call the about file from pages.

similary if we wanna open profile page then make file name it profile then when link hits localhost:3000/profile then that page will open


#--------nested routing--------#

if we wanna open nested pages like blogs then blog_1 or blog_2 then we will create folder name blog and all files/pages related to this route will be on this folder. The first file will be again index file.
so if we hit localhost:3000/blog then index file of this folder will render. And other pages blog_1 and blog_2 so when localhost:3000/blog/blog_1 then this will render.

so for nested routes we have to make nested folder structure.


#----------Catch all routes---------#

if we have common pages and we dont want to make many nested folders so we will common page route
if url have that keyword with other word then that page will render.

make folder with file name [...name].js where NAME will be find from the url

code------>

import React from 'react'
import {useRouter} from 'next/router'

export default function doc() {
    const {param=[]}=router.query
    console.log(param)
 
    if(param.length===2){
        return(
            <div>

            <h1>doc for {param[0]}</h1>
            <h1>doc doc for {param[1]}</h1>
            </div>
        )
    }
    else if(param.length===1){
        return(
            <h1>{param[0]}</h1>
        )
    }
    return(
        <h1>home doc page</h1>
    )
}
